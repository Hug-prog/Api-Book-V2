FROM php:8.1

# Copy composer.lock and composer.json
COPY composer.lock /var/www/
COPY composer.json /var/www/


RUN apk add oniguruma-dev libxml2-dev

RUN apk add nodejs npm

RUN apt-get update && apt-get install -y \
        bcmath \
        ctype \
        fileinfo \
        mbstring \
        pdo_mysql \
        xml\
        libpq-dev \
        && docker-php-ext-install pdo pdo_pgsql


COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

ENV NODE_VERSION=16.16.0
RUN apt install -y curl
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"

WORKDIR /app

COPY . .


RUN cp -n .env.API-BOOK-V2 .env


RUN composer install --no-interaction --optimize-autoloader --no-dev

# Add user
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

RUN php artisan key:generate

RUN php artisan config:cache

RUN php artisan route:cache

RUN php artisan view:cache

RUN npm install
RUN npm run build

RUN chown -R application:application 

# Change current user to www
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 8000
CMD ["php-fpm"]